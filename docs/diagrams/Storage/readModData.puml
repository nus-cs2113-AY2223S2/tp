@startuml
'https://plantuml.com/sequence-diagram

":ModuleStorage" -> ":ModuleStorage" : readModData(SAVED_MODULES_FILE_PATH, modules)
activate ":ModuleStorage"
create ":FileReader"
":ModuleStorage" -> ":FileReader" : FileReader(modulesFilePath)
activate ":FileReader"
":ModuleStorage" <-- ":FileReader" : FileReader
deactivate ":FileReader"
create ":BufferedReader"
":ModuleStorage" -> ":BufferedReader" : BufferedReader(FileReader)
activate ":BufferedReader"
":ModuleStorage" <-- ":BufferedReader" : br
deactivate ":BufferedReader"
":ModuleStorage" -> ":BufferedReader" : br.readLine()
activate ":BufferedReader"
":ModuleStorage" <-- ":BufferedReader" : line:String
deactivate ":BufferedReader"
loop line != null
":ModuleStorage" -> ":String" : line.split(",")
activate ":String"
":ModuleStorage" <-- ":String" : row:String[]
deactivate ":String"
opt row[3].equals("N/A")
":ModuleStorage" -> ":ModuleStorage" : row[3] = "0";
end
":ModuleStorage" -> ":Integer" : Integer.parseInt(row[0])
activate ":Integer"
":ModuleStorage" <-- ":Integer" : Integer0
deactivate ":Integer"
":ModuleStorage" -> ":Integer" : Integer.parseInt(row[3])
activate ":Integer"
":ModuleStorage" <-- ":Integer" : Integer3
deactivate ":Integer"
":ModuleStorage" -> ":Integer" : Integer.parseInt(row[6])
activate ":Integer"
":ModuleStorage" <-- ":Integer" : Integer6
deactivate ":Integer"
create ":Module"
":ModuleStorage" -> ":Module" : Module(Integer0, row[1], row[2], Integer3, row[4], row[5],Integer6)
activate ":Module"
":ModuleStorage" <-- ":Module" : module:Module
deactivate ":Module"
":ModuleStorage" -> ":ArrayList<Module>" : modules.add(module)
activate ":ArrayList<Module>"
deactivate ":ArrayList<Module>"
":ModuleStorage" -> ":BufferedReader" : br.readLine()
activate ":BufferedReader"
":ModuleStorage" <-- ":BufferedReader" : line:String
deactivate ":BufferedReader"
end
":ModuleStorage" --> ":ModuleStorage"
deactivate ":ModuleStorage"
@enduml