@startuml
'https://plantuml.com/sequence-diagram

activate ":ListCurrentPuCommand"

":ListCurrentPuCommand" -> "<<class>>\nui:UI" : printCurrentPuModList(modules, uniIDToPrint)
activate "<<class>>\nui:UI"

create "puModulesToPrint: ArrayList<Module>"
"<<class>>\nui:UI" -> "puModulesToPrint: ArrayList<Module>"
activate "puModulesToPrint: ArrayList<Module>"
"<<class>>\nui:UI" <-- "puModulesToPrint: ArrayList<Module>"
deactivate "puModulesToPrint: ArrayList<Module>"

loop for each Module in modules
    "<<class>>\nui:UI" -> "modules: ArrayList<Module>"
     activate "modules: ArrayList<Module>"
     create "currentModule: Module"
     "modules: ArrayList<Module>" -> "currentModule: Module"
     activate "currentModule: Module"
     "modules: ArrayList<Module>" <-- "currentModule: Module"
     deactivate "currentModule: Module"
     "<<class>>\nui:UI" <-- "modules: ArrayList<Module>"
     deactivate "modules: ArrayList<Module>"



    "<<class>>\nui:UI" -> "currentModule: Module" : "getUnivId()"
    "<<class>>\nui:UI" <-- "currentModule: Module" : currentModule's univId
     opt currentModule's univId == uniIDToPrint
        "<<class>>\nui:UI" -> "puModulesToPrint: ArrayList<Module>": add(currentModule)
        "<<class>>\nui:UI" <-- "puModulesToPrint: ArrayList<Module>"
     end
end

create "universityName: String"
"<<class>>\nui:UI" -> "universityName: String"
activate "universityName: String"
"<<class>>\nui:UI" <-- "universityName: String"
deactivate "universityName: String"

loop for university in <<class>>universities
    "<<class>>\nui:UI" -> "<<class>>universities: ArrayList<University>" : retrieve Class level object "universities"
     activate "<<class>>universities: ArrayList<University>"
     create "currentUniversity: University"
     "<<class>>universities: ArrayList<University>" -> "currentUniversity: University"
     activate "currentUniversity: University"
     "<<class>>universities: ArrayList<University>" <-- "currentUniversity: University"
     deactivate "currentUniversity: University"
     "<<class>>\nui:UI" <-- "<<class>>universities: ArrayList<University>"
     deactivate "<<class>>universities: ArrayList<University>"

     "<<class>>\nui:UI" -> "currentUniversity: University": "getUnivId()"
     "<<class>>\nui:UI" <-- "currentUniversity: University": "currentUniversity's ID"
     opt "currentUniversity's ID" == univId
        "<<class>>\nui:UI" -> "universityName: String": set universityName as currentUniversity Name
        "<<class>>\nui:UI" <-- "universityName: String"
     end
end
    create "listIndex: Int"
     "<<class>>\nui:UI" -> "listIndex: Int"
     activate "listIndex: Int"
     "<<class>>\nui:UI" <-- "listIndex: Int"
     deactivate "listIndex: Int"

    ref over "<<class>>\nui:UI","puModulesToPrint: ArrayList<Module>", UserConsole, "listIndex: Int"
        Print module details for "puModulesToPrint: ArrayList<Module>"
    end ref



"<<class>>\nui:UI" --> ":ListCurrentPuCommand" : return control
deactivate "<<class>>\nui:UI"
deactivate ":ListCurrentPuCommand"
@enduml