@startuml
'https://plantuml.com/sequence-diagram
-> ":EditAirplaneTicketCommand" : command.execute()
activate ":EditAirplaneTicketCommand"
":EditAirplaneTicketCommand" -> ":BudgetPlanner" : budgetPlanner.getAirplaneTicketTotalCost()
activate ":BudgetPlanner"
":EditAirplaneTicketCommand" <-- ":BudgetPlanner" : initialCost:int
deactivate ":BudgetPlanner"
":EditAirplaneTicketCommand" -> ":BudgetPlanner" : budgetPlanner.setAirplaneTicketTotalCost(cost)
activate ":BudgetPlanner"
":EditAirplaneTicketCommand" <-- ":BudgetPlanner"
deactivate ":BudgetPlanner"
":EditAirplaneTicketCommand" -> ":BudgetPlanner" : budgetPlanner.getAirplaneTicketTotalCost()
activate ":BudgetPlanner"
":EditAirplaneTicketCommand" <-- ":BudgetPlanner" : newCost:int
deactivate ":BudgetPlanner"
alt initialCost == newCost
":EditAirplaneTicketCommand" -> "<<class>>\n:UI" : UI.printCostNoChangeMessage();
activate "<<class>>\n:UI"
":EditAirplaneTicketCommand" <-- "<<class>>\n:UI"
deactivate "<<class>>\n:UI"
<-- ":EditAirplaneTicketCommand"
else initialCost != newCost
create ":AirplaneTicket"
":EditAirplaneTicketCommand" -> ":AirplaneTicket" : new AirplaneTicket(cost)
activate ":AirplaneTicket"
":EditAirplaneTicketCommand" <-- ":AirplaneTicket" : airplaneTicket
deactivate ":AirplaneTicket"
":EditAirplaneTicketCommand" -> "<<class>>\n:UI" : UI.printEditCostMessage(cost, airplaneTicket)
activate "<<class>>\n:UI"
":EditAirplaneTicketCommand" <-- "<<class>>\n:UI"
deactivate "<<class>>\n:UI"
<-- ":EditAirplaneTicketCommand"
deactivate ":EditAirplaneTicketCommand"
end
@enduml