@startuml
'https://plantuml.com/sequence-diagram
-> ":EditFoodCommand" : command.execute()
activate ":EditFoodCommand"
":EditFoodCommand" -> ":BudgetPlanner" : budgetPlanner.getFoodTotalCost()
activate ":BudgetPlanner"
":EditFoodCommand" <-- ":BudgetPlanner" : initialCost:int
deactivate ":BudgetPlanner"
":EditFoodCommand" -> ":BudgetPlanner" : budgetPlanner.setFoodTotalCost(cost)
activate ":BudgetPlanner"
":EditFoodCommand" <-- ":BudgetPlanner"
deactivate ":BudgetPlanner"
":EditFoodCommand" -> ":BudgetPlanner" : budgetPlanner.getFoodTotalCost()
activate ":BudgetPlanner"
":EditFoodCommand" <-- ":BudgetPlanner" : newCost:int
deactivate ":BudgetPlanner"
opt initialCost == newCost
":EditFoodCommand" -> "<<class>>\n:UI" : UI.printCostNoChangeMessage();
activate "<<class>>\n:UI"
":EditFoodCommand" <-- "<<class>>\n:UI"
deactivate "<<class>>\n:UI"
<-- ":EditFoodCommand"
else initialCost != newCost
create ":Food"
":EditFoodCommand" -> ":Food" : new Food(cost)
activate ":Food"
":EditFoodCommand" <-- ":Food" : food
deactivate ":Food"
":EditFoodCommand" -> "<<class>>\n:UI" : UI.printEditCostMessage(cost, food)
activate "<<class>>\n:UI"
":EditFoodCommand" <-- "<<class>>\n:UI"
deactivate "<<class>>\n:UI"
<-- ":EditFoodCommand"
deactivate ":EditFoodCommand"
end
@enduml