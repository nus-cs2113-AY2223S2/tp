@startuml
'https://plantuml.com/class-diagram
!include Style.puml
title Secret Storage Diagram

component SecretStorage {
    package secrets {
        class Secret {
            {static}+ TYPE: String
            {static}- ILLEGAL_CHARS_PATTERN: String
            - folderName: String
            - uid: String
            - name: String
            + Secret(String): void
            + Secret(String, String): void
            {static}+ getType(): String
            {static}+ isIllegalName(String): boolean
            + getUid(): String
            + setName(String): void
            + getName(): String
            + getFolderName(): String
            + setFolderName(String): void
            + toStringForDatabase(): String
            + getRevealStr(): String
        }
        class BasicPassword {
            {static}+ TYPE: String
            - username: String
            - password: String
            - url: String
            + getType(): String
            + BasicPassword(String, String,
                String, String): void
            + BasicPassword(String, String, String,
                String, String): void
            + getPassword(): String
            + getUrl(): String
            + toStringForDatabase(): String
            + getRevealStr(): String
            + getUsername(): String
            + setUsername(String): void
            + setUrl(String): void
        }

        class CreditCard {
            {static}+ TYPE: String
            - EXPIRY_DATE_FMT: String
            - CREDIT_CARD_NUMBER_FMT: String
            {static}- CVC_NUMBER_FMT: String
            - fullName: String
            - creditCardNumber: String
            - cvcNumber: String
            - expiryDate: String
            + CreditCard(name: String, fullName: String, creditCardNumber: String,
                 cvcNumber: String, expiryDate: String): void
            + CreditCard(name: String, folderName: String, fullName: String, creditCardNumber: String,
                 cvcNumber: String, expiryDate: String): void
            + getType(): String
            {static}+ isLegalNameExpiryDate(String): boolean
            {static}+ isLegalCreditCardNumber: boolean
            {static}+ isLegalCvcNumber: boolean
            + getExpiryDate(): String
            + setExpiryDate(expiryDate: String): void
            + getFullName(): String
            + setFullName(fullName: String): void
            + getCreditCardNumber(): String
            + setCreditCardNumber(creditCardNumber: String): void
            + getCvcNumber(): int
            + setCvcNumber(cvcNumber: int): void
            + getRevealStr(): String
            + toStringForDatabase(): String
        }
        class CryptoWallet {
            {static}+ TYPE: String
            - username: String
            - privateKey: String
            - seedPhrase: String
            - urls: ArrayList<String>
            + CryptoWallet(name: String, username: String,
                    privateKey: String, seedPhrase: String): void
            + CryptoWallet(name: String, folderName: String, username: String,
                    privateKey: String, seedPhrase: String): void
            + CryptoWallet(name: String, folderName: String, username: String,
                    privateKey: String, seedPhrase: String, urls: ArrayList<String>): void
            + getType(): String
            + getUsername(): String
            + setUsername(username: String): void
            + getPrivateKey(): String
            + setPrivateKey(String): void
            + getSeedPhrase(): String
            + setSeedPhrase(seedPhrase: String): void
            + getUrls(): ArrayList<String>
            + setUrls(urls: ArrayList<String>): void
            + addUrl(url: String): void
            + getRevealStr(): String
            + toStringForDatabase(): String
        }
        class NUSNet {
            {static}+ TYPE: String
            {static}- ALLOWED_ID_REGEX: String
            - nusNetId: String
            - password: String
            + NUSNet(name: String,
                nusNetId: String, password: String): void
            + NUSNet(name: String, folderName: String,
                nusNetId: String, password: String): void
            + getType(): String
            {static}+ isLegalId(String): boolean
            + getPassword(): String
            + setPassword(String): void
            + getnusNetId(): String
            + setnusNetId(String): void
            + toStringForDatabase(): String
            + getRevealStr(): String
        }
        class StudentID {
            {static}+ TYPE: String
            {static}- ACCEPTED_ID_REGEX: String
            - studentID: String
            + StudentID(name: String, studentID: String)
            + StudentID(name: String, folderName: String, studentID: String)
            + getType(): String
            {static}+ isLegalId(String): boolean
            + getStudentID(): String
            + setStudentId(String): void
            + toStringForDatabase(): String
            + getRevealStr(): String
        }
        class WifiPassword {
            {static}+ TYPE: String
            - username: String
            - password: String
            + WifiPassword(name: String, username: String,
                    password: String): void
            + WifiPassword(name: String, folderName: String,
                    username: String, password: String): void
            + getType(): String
            + getUsername(): String
            + setUsername(username: String): void
            + removeUsername(): void
            + getPassword(): String
            + setPassword(): void
            + getRevealStr(): String
            + toStringForDatabase(): String
        }
        skinparam groupInheritance 3
        Secret <|-- BasicPassword
        Secret <|-- CreditCard
        Secret <|-- CryptoWallet
        Secret <|-- NUSNet
        Secret <|-- StudentID
        Secret <|-- WifiPassword
    }
    package storage {
        class SecretMaster {
            - DEFAULT_FOLDER: String
            - ALLOWED_NAMES_REGEX: String
            - secretSearcher: SecretSearcher
            - secretEnumerator: SecretEnumerator
            - folders: HashSet<String>
            - secretName: HashSet<String>
            + SecretMaster()
            + SecretMaster(secretSearcher: SecretSearcher, secretEnumerator: SecretEnumerator): void
            + isLegalName(name: String): boolean
            + getFolders(): HashSet<String>
            + getSecretSearcher: SecretSearcher
            + getSecretEnumerator: SecretEnumerator
            + getSecretNames: HashSet<String>
            + createFolder(folderName: String)
            + getByIndex(index: int): Secret
            + getByIndex(index: int, folderName: String): Secret
            + listSecrets(): ArrayList<Secret>
            + listSecrets(folderName: String): ArrayList<Secret>
            + getByName(name: String): Secret
            + addSecret(secret: Secret): void
            + editSecret(secret: Secret, newName: String, newFolderName: String): void
            + removeSecret(secret: Secret, newName: String, newFolderName: String): void
        }
        class SecretEnumerator {
            - storage: ArrayList<Secret>
            - folders: Hashtable<String, ArrayList<Secret>>
            + SecretEnumerator(): void
            + SecretEnumerator(storage: ArrayList<Secret>, folders: Hashtable<String, ArrayList<Secret>>)
            + createFolder(folderName: String): void
            + deleteFolder(folderName: String): void
            + get(index: int): Secret
            + get(index: int, folderName: String): Secret
            + getList(): ArrayList<Secret>
            + getList(folderName: String): ArrayList<Secret>
            + add(secret: Secret): void
            + delete(secret: Secret): void
            + size(): int
            + getFolders(): HashSet<String>
        }
        class SecretSearcher {
            - storage: Hashtable<String, Secret>
            - folders: Hashtable<String, Hashtable<String, Secret>>
            + SecretSearcher(): void
            + SecretSearcher(storage: Hashtable<String, Secret>,
                folders: Hashtable<String, Hashtable<String, Secret>>): void
            + get(secretId: String): Secret
            + createFolder(folderName: String): void
            + deleteFolder(folderName: String): void
            + add(secret: Secret): void
            + delete(secret: Secret): void
            + getNames(): HashSet<String>
        }
        SecretMaster *-up- "1" SecretSearcher
        SecretMaster *-up- "1" SecretEnumerator
        SecretEnumerator *-up- "*" BasicPassword
        SecretEnumerator *-up- "*" CreditCard
        SecretEnumerator *-up- "*" CryptoWallet
        SecretEnumerator *-up- "*" NUSNet
        SecretEnumerator *-up- "*" StudentID
        SecretEnumerator *-up- "*" WifiPassword
        SecretSearcher *-up- "*" BasicPassword
        SecretSearcher *-up- "*" CreditCard
        SecretSearcher *-up- "*" CryptoWallet
        SecretSearcher *-up- "*" NUSNet
        SecretSearcher *-up- "*" StudentID
        SecretSearcher *-up- "*" WifiPassword
    }
}
@enduml