@startuml

/' diagram meta data start
config=StructureConfiguration;
{
  "projectClassification": {
    "searchMode": "OpenProject", // OpenProject, AllProjects
    "includedProjects": "",
    "pathEndKeywords": "*.impl",
    "isClientPath": "",
    "isClientName": "",
    "isTestPath": "",
    "isTestName": "",
    "isMappingPath": "",
    "isMappingName": "",
    "isDataAccessPath": "",
    "isDataAccessName": "",
    "isDataStructurePath": "",
    "isDataStructureName": "",
    "isInterfaceStructuresPath": "",
    "isInterfaceStructuresName": "",
    "isEntryPointPath": "",
    "isEntryPointName": "",
    "treatFinalFieldsAsMandatory": false
  },
  "graphRestriction": {
    "classPackageExcludeFilter": "",
    "classPackageIncludeFilter": "",
    "classNameExcludeFilter": "",
    "classNameIncludeFilter": "",
    "methodNameExcludeFilter": "",
    "methodNameIncludeFilter": "",
    "removeByInheritance": "", // inheritance/annotation based filtering is done in a second step
    "removeByAnnotation": "",
    "removeByClassPackage": "", // cleanup the graph after inheritance/annotation based filtering is done
    "removeByClassName": "",
    "cutMappings": false,
    "cutEnum": true,
    "cutTests": true,
    "cutClient": true,
    "cutDataAccess": false,
    "cutInterfaceStructures": false,
    "cutDataStructures": false,
    "cutGetterAndSetter": true,
    "cutConstructors": true
  },
  "graphTraversal": {
    "forwardDepth": 3,
    "backwardDepth": 3,
    "classPackageExcludeFilter": "",
    "classPackageIncludeFilter": "",
    "classNameExcludeFilter": "",
    "classNameIncludeFilter": "",
    "methodNameExcludeFilter": "",
    "methodNameIncludeFilter": "",
    "hideMappings": false,
    "hideDataStructures": false,
    "hidePrivateMethods": true,
    "hideInterfaceCalls": true, // indirection: implementation -> interface (is hidden) -> implementation
    "onlyShowApplicationEntryPoints": false, // root node is included
    "useMethodCallsForStructureDiagram": "ForwardOnly" // ForwardOnly, BothDirections, No
  },
  "details": {
    "aggregation": "GroupByClass", // ByClass, GroupByClass, None
    "showClassGenericTypes": true,
    "showMethods": true,
    "showMethodParameterNames": true,
    "showMethodParameterTypes": true,
    "showMethodReturnType": true,
    "showPackageLevels": 2,
    "showDetailedClassStructure": true
  },
  "rootClass": "archive.Archive",
  "extensionCallbackMethod": "" // qualified.class.name#methodName - signature: public static String method(String)
}
diagram meta data end '/



digraph g {
    rankdir="TB"
    splines=polyline
    

'nodes 
subgraph cluster_1519786164 { 
   	label=appointments
	labeljust=l
	fillcolor="#ececec"
	style=filled
   
   Appointment967792423[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)Appointment</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+   animal: Animal [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >+   isDone: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   owner: Owner [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >+   uid: String [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ isDate(date: String): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ retrieveStorageInfo(): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];
} 

subgraph cluster_3732 { 
   	label=ui
	labeljust=l
	fillcolor="#ececec"
	style=filled
   
   Ui1037788935[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)Ui</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ formatPrintList(count: int, description: String)</TD></TR>
<TR><TD ALIGN="LEFT" >+ printAppointmentAddedMessage(appointment: Appointment)</TD></TR>
<TR><TD ALIGN="LEFT" >+ printAppointmentAlreadyMarkedMessage(uid: String)</TD></TR>
<TR><TD ALIGN="LEFT" >+ printAppointmentAlreadyUnMarkedMessage(uid: String)</TD></TR>
<TR><TD ALIGN="LEFT" >+ printAppointmentMarkMessage()</TD></TR>
<TR><TD ALIGN="LEFT" >+ printAppointmentRemovedMessage(appointment: Appointment)</TD></TR>
<TR><TD ALIGN="LEFT" >+ printAppointmentUnMarkMessage()</TD></TR>
<TR><TD ALIGN="LEFT" >+ printArchiveFileCreated(b: boolean)</TD></TR>
<TR><TD ALIGN="LEFT" >+ printBlankLine()</TD></TR>
<TR><TD ALIGN="LEFT" >+ printFileCreated(b: boolean)</TD></TR>
<TR><TD ALIGN="LEFT" >+ readUserCommand(): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ showErrorMessage()</TD></TR>
<TR><TD ALIGN="LEFT" >+ showHelpMessage()</TD></TR>
<TR><TD ALIGN="LEFT" >+ showLine()</TD></TR>
<TR><TD ALIGN="LEFT" >+ showUserMessage(s: String)</TD></TR>
<TR><TD ALIGN="LEFT" >+ showWelcomeMessage()</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];
} 

subgraph cluster_579021399 { 
   	label=functionalities
	labeljust=l
	fillcolor="#ececec"
	style=filled
   
   SniffTasks579021399[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)SniffTasks</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addAppointment(appointment: Appointment)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addAppointmentUID(uid: String)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addConsultation(animal: Animal, owner: Owner, date: LocalDate, time: LocalTime)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addSurgery(animal: Animal, owner: Owner, priority: String, startDate: LocalDate, startTime: LocalTime, endDate: LocalDate, endTime: LocalTime)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addVaccination(animal: Animal, owner: Owner, date: LocalDate, time: LocalTime, vaccine: String)</TD></TR>
<TR><TD ALIGN="LEFT" >+ archivedTasks(archiveSavedFile: FileWriter)</TD></TR>
<TR><TD ALIGN="LEFT" >+ checkConsultationDuplicate(animal: Animal, owner: Owner, date: LocalDate, time: LocalTime)</TD></TR>
<TR><TD ALIGN="LEFT" >+ checkSurgeryDuplicate(animal: Animal, owner: Owner, startDate: LocalDate, startTime: LocalTime, endDate: LocalDate, endTime: LocalTime)</TD></TR>
<TR><TD ALIGN="LEFT" >+ checkVaccinationDuplicate(animal: Animal, owner: Owner, date: LocalDate, time: LocalTime, vaccine: String)</TD></TR>
<TR><TD ALIGN="LEFT" >+ editConsultation(uid: String, animal: Animal, owner: Owner, date: LocalDate, time: LocalTime)</TD></TR>
<TR><TD ALIGN="LEFT" >+ editSurgery(uid: String, animal: Animal, owner: Owner, priority: String, startDate: LocalDate, startTime: LocalTime, endDate: LocalDate, endTime: LocalTime)</TD></TR>
<TR><TD ALIGN="LEFT" >+ editVaccination(uid: String, animal: Animal, owner: Owner, date: LocalDate, time: LocalTime, vaccine: String)</TD></TR>
<TR><TD ALIGN="LEFT" >+ findAnimal(animal: String)</TD></TR>
<TR><TD ALIGN="LEFT" >+ findAppointment(uid: String)</TD></TR>
<TR><TD ALIGN="LEFT" >+ findDate(date: String)</TD></TR>
<TR><TD ALIGN="LEFT" >+ findType(type: String)</TD></TR>
<TR><TD ALIGN="LEFT" >+ listAppointments()</TD></TR>
<TR><TD ALIGN="LEFT" >+ listArchivedAppointments()</TD></TR>
<TR><TD ALIGN="LEFT" >+ markAppointment(uid: String)</TD></TR>
<TR><TD ALIGN="LEFT" >+ removeAppointment(uid: String)</TD></TR>
<TR><TD ALIGN="LEFT" >+ retrieveTask(savedFile: FileWriter)</TD></TR>
<TR><TD ALIGN="LEFT" >+ unMarkAppointment(uid: String)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

Uid579021399[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)Uid</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ uidGenerator(appointmentType: String): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];
} 

subgraph cluster_748101438 { 
   	label=archive
	labeljust=l
	fillcolor="#ececec"
	style=filled
   
   Archive748101438[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)Archive</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ extractArchiveData(archiveFile: File)</TD></TR>
<TR><TD ALIGN="LEFT" >+ openArchiveFile(filePath: String)</TD></TR>
<TR><TD ALIGN="LEFT" >+ saveArchivedAppointments(filePath: String)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];
} 

subgraph cluster_995410913 { 
   	label=parser
	labeljust=l
	fillcolor="#ececec"
	style=filled
   
   ArchiveParser1930038276[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ArchiveParser</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addConsult(content: String)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addSurgery(content: String)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addVaccine(content: String)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];
} 

'edges    
Archive748101438 -> SniffTasks579021399[label="saveArchivedAppointments() -> archivedTasks()"];
    
}
@enduml